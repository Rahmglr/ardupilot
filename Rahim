cd ardupilot
sim_vehicle.py -v ArduCopter -f gazebo-iris --console --from dronekit import connect, VehicleMode
import time
import random

# Drone'a bağlanma
try:
    vehicle = connect('udp:127.0.0.1:14550', wait_ready=True)
except Exception as e:
    print(f"Failed to connect to the vehicle: {e}")
    exit()

def arm_and_takeoff(aTargetAltitude):
    print("Arming motors")
    vehicle.mode = VehicleMode("GUIDED")
    vehicle.armed = True

    while not vehicle.armed:
        print(" Waiting for arming...")
        time.sleep(1)

    # GPS fix kontrolü
    while vehicle.gps_0.fix_type < 2:
        print(" Waiting for GPS fix...")
        time.sleep(1)

    print("Taking off!")
    vehicle.simple_takeoff(aTargetAltitude)

    while True:
        print(" Altitude: ", vehicle.location.global_relative_frame.alt)
        if vehicle.location.global_relative_frame.alt >= aTargetAltitude * 0.95:
            print("Reached target altitude")
            break
        time.sleep(1)

def get_temperature():
    return random.uniform(20.0, 100.0)  # 20°C ile 100°C arasında rastgele sıcaklık

def main():
    if vehicle.battery.level < 20:  # Örnek batarya eşiği
        print("Battery low! Cannot take off.")
        return

    arm_and_takeoff(10)  # 10 metreye çıkış

    target_location = vehicle.location.global_frame
    target_location.lat += 0.0001  # Hedef koordinat
    target_location.lon += 0.0001

    vehicle.simple_goto(target_location)

    time.sleep(10)  # Hedefe ulaşmak için bekle

    temperature = get_temperature()
    print(f"Measured Temperature: {temperature:.2f}°C")

    if temperature > 50.0:  # Yangın tespiti için eşik
        print("Warning: Fire detected! Activating firefighting protocol.")
        # Yangın söndürme sistemini etkinleştirme kodu buraya eklenebilir

    print("Returning to Launch")
    vehicle.mode = VehicleMode("RTL")

    while vehicle.armed:
        time.sleep(1)

    print("Drone has landed.")

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        print(f"An error occurred: {e}")
        vehicle.mode = VehicleMode("RTL")  # Hata durumunda geri dön
    finally:
        vehicle.close()  # Bağlantıyı kapatma
